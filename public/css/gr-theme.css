@import url('https://fonts.googleapis.com/css2?family=Barlow&display=swap');
@import url();


:root, :after, :before {
    /* These are the base visual configurations for a spefic project */
    --base-border-width: 1px;
    --base-border-radius: 6px;
  
    --display-font: 'Sentinel', sans-serif;
    --body-font: 'Barlow', sans-serif;
    --line-height: var(--ratio);
    --font-weight: 200;
  
    --form-border-radius: 6px;
    --form-font-weight: 200;
    --form-border-hsl: transparent;
    --form-shadow: 0 1px 2px hsla(var(--base-hsl), .1);
  
    --base-padding-inline: var(--s2); 
    --base-padding-block: var(--s-1);
  
    /* Project Official Colors  */
    /* HSLA variables */
    --base-hsl: 201, 100%, 14%;
    --primary-hsl: 213, 92%, 66%;
    --secondary-hsl: 253, 49%, 16%;
    --accent-hsl: 166, 70%, 73%;
  
    /* --theme-navy-hsl: 199, 84%, 20%; */
    --theme-red-hsl:   355,  58%, 49%;
    --theme-yellow-hsl: 33, 100%, 49%;
    --theme-purple-hsl: 299, 63%, 24%;
    --theme-green-hsl:  153, 28%, 43%;
    
    --primary-color: hsla(var(--primary-hsl), 1);
    --secondary-color: hsla(var(--secondary-hsl), 1);
    
    --base-color: hsla(var(--base-hsl), 1);
    
    --accent-color: hsla(var(--accent-hsl), 1);
  
    /* baseline colors */
    --white-hsl: 0, 0%, 100%;  
    --white-color: hsla(var(--white-hsl), 1);  
    
    --black-hsl: 0, 0%, 5%;  
    --black-color: hsla(var(--black-hsl), 1);
    
    --red-hsl: 347, 58%, 46%;  
    --red-color: hsla(var(--red-hsl), 1);  
      
    --green-hsl: 174, 62%, 47%;
    --green-color: hsla(var(--green-hsl), 1);
      
    --yellow-hsl: 37, 98%, 53%;
    --yellow-color: hsla(var(--yellow-hsl), 1);
      
    --gray-hsl: 0, 0%, 92%;
    --gray-color: hsla(var(--gray-hsl), 1);
    
    /* Aliases */
    --fail-color: var(--red-color); 
    --error-color: var(--red-color);
    --warning-color: var(--yellow-color);
    --success-color: var(--green-color);
  }
  
/* Shades and Tints */
:root, :after, :before {
    --base-color-05: hsla(var(--base-hsl), .05);
    --base-color-10: hsla(var(--base-hsl), .1);
    --base-color-20: hsla(var(--base-hsl), .2);
    --base-color-30: hsla(var(--base-hsl), .3);
    --base-color-70: hsla(var(--base-hsl), .7);
    --base-color-80: hsla(var(--base-hsl), .8);
    --base-color-90: hsla(var(--base-hsl), .9);

    --primary-color-05: hsla(var(--primary-hsl), .05);
    --primary-color-10: hsla(var(--primary-hsl), .1);
    --primary-color-20: hsla(var(--primary-hsl), .2);
    --primary-color-30: hsla(var(--primary-hsl), .3);
    --primary-color-70: hsla(var(--primary-hsl), .7);
    --primary-color-80: hsla(var(--primary-hsl), .8);
    --primary-color-90: hsla(var(--primary-hsl), .9);

    --secondary-color-05: hsla(var(--secondary-hsl), .05);
    --secondary-color-10: hsla(var(--secondary-hsl), .1);
    --secondary-color-20: hsla(var(--secondary-hsl), .2);
    --secondary-color-30: hsla(var(--secondary-hsl), .3);
    --secondary-color-70: hsla(var(--secondary-hsl), .7);
    --secondary-color-80: hsla(var(--secondary-hsl), .8);
    --secondary-color-90: hsla(var(--secondary-hsl), .9);

    --accent-color-05: hsla(var(--accent-hsl), .05);
    --accent-color-10: hsla(var(--accent-hsl), .1);
    --accent-color-20: hsla(var(--accent-hsl), .2);
    --accent-color-30: hsla(var(--accent-hsl), .3);
    --accent-color-70: hsla(var(--accent-hsl), .7);
    --accent-color-80: hsla(var(--accent-hsl), .8);
    --accent-color-90: hsla(var(--accent-hsl), .9);
}

.button {
  /* Structure */
  display: inline-block;
  zoom: 1;
  line-height: 1;
  white-space: nowrap;
  vertical-align: middle;
  text-align: center;
  cursor: pointer;
  -webkit-user-drag: none;
  user-select: none;
  box-sizing: border-box;
  font-size: 100%;
  font-family: inherit;
  text-decoration: none;
  align-self: self-start;
  justify-self: flex-start;
}

.button:focus { outline: 0; }

/* Firefox: Get rid of the inner focus border */
.button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.button[disabled],
.button[disabled]:hover,
.button[disabled]:focus,
.button[disabled]:active {
  filter: alpha(opacity=40);
  opacity: 0.4;
  cursor: not-allowed;
  box-shadow: none;
  pointer-events: none;
}

.button[hidden] { display: none; }

.button[unstyled] {
  background-color: transparent;
  border-color: transparent;
}

.button[fullWidth="true"],
.button[data-fullWidth="true"] {
  align-self: stretch;
  justify-self: stretch;
}



/* 
  This file contains the css rules for the button system. 
  Most of the visual configurations can be made through the variables. (Lines 13-21)
  Many of these configurations have fallbacks values. 
*/

.button {
  /* Required Values */
  --button-hsl:               var(--base-hsl);
  --button-text-hsl:          var(--base-hsl);
  --button-color:             hsla(var(--button-hsl), 1);
  --button-text-color:        hsla(var(--button-text-hsl), 1);
  --button-padding-block:     var(--base-padding-block);
  --button-padding-inline:    var(--base-padding-inline);

  /* Optional Values */
  --button-border-radius: var(--base-border-radius, 0);    /* Fallback to 0 */
  --button-border-color:  var(--button-color);             /* Fallback to 1px */
  --button-border-width:  var(--base-border-width, 2px);   /* Fallback to 1px */
  --button-border-style:  var(--base-border-style, solid); /* Fallback to solid */
  --button-font-weight:   var(--font-weight, 400);         /* Fallback to 400 */
  --button-font-size:     100%;
  --button-icon-color:    var(--button-text-color);
}

.button[data-color="base"],
.button[color="base"] { 
  --button-hsl: var(--base-hsl); 
  --button-text-color: var(--base-color); 
}

.button[data-color="primary"],
.button[color="primary"] { 
  --button-hsl: var(--primary-hsl); 
  --button-text-color: var(--primary-color); 
}

.button[data-color="secondary"],
.button[color="secondary"] { 
  --button-hsl: var(--secondary-hsl); 
  --button-text-color: var(--secondary-color); 
}

.button[data-color="tertiary"],
.button[color="tertiary"] { 
  --button-hsl: var(--tertiary-hsl); 
  --button-text-color: var(--tertiary-color); 
}

.button[data-color="accent"],
.button[color="accent"] { 
  --button-hsl: var(--accent-hsl);
  --button-text-color: var(--accent-color);
}

.button[data-color="white"], 
.button[color="white"] { 
  --button-hsl: var(--white-hsl);
  --button-text-color: var(--white-color);
}

.button[data-color="success"],
.button[color="success"] { 
  --button-hsl: var(--green-hsl); 
  --button-text-color: var(--green-color);
}

.button[data-color="cancel"],
.button[data-color="fail"],
.button[color="cancel"],
.button[color="fail"] { 
  --button-hsl: var(--red-hsl);
  --button-text-color: var(--red-color);
}

.button[data-color="warning"],
.button[color="warning"] { 
  --button-hsl: var(--yellow-hsl);
  --button-text-color: var(--yellow-color);
}

.button[data-size="s"],
.button[size="s"] {
  --button-padding-block: var(--s-2);
  --button-padding-inline: var(--s0);
  --button-font-size: 75%; 
}

.button[data-size="l"],
.button[size="l"] {
  --button-padding-block: var(--s0);
  --button-padding-inline: var(--s2);
  --button-font-size: 120%;
}

.button[data-size="xl"],
.button[size="xl"] {
  --button-padding-block: var(--s0);
  --button-padding-inline: var(--s2);
  --button-font-size: 150%;
}

.button[data-size="full-width"],
.button[size="full-width"] { width: 100%; }

.button {
  padding: var(--button-padding-block) var(--button-padding-inline);
  border-radius: var(--button-border-radius, 0);
  font-weight: var(--button-font-weight, 400);
  font-size: var(--button-font-size, 100%);
  border-width: var(--button-border-width, 1px);
  border-style: var(--button-border-style, solid);
  border-color: var(--button-border-color);
  color: var(--button-text-color);
  background-color: transparent;
}

.button:hover { background-image: linear-gradient(hsla(var(--button-hsl), 0.05), hsla(var(--button-hsl), 0.05)); }

.button:active {
  background-image: linear-gradient(hsla(var(--button-hsl), 0.15), hsla(var(--button-hsl), 0.15));
  border-color: hsla(var(--button-color), 1);
}
  
.button:focus { box-shadow: var(--focus-effect); }


.button[data-visual="primary"],
.button[visual="primary"] {
    color: white;
    border-width: var(--button-border-width, 0);
    border-style: var(--button-border-style, solid);
    border-color: hsla(var(--button-hsl), 1);
    background-color: hsla(var(--button-hsl), 1);
}

.button[data-visual="primary"]:hover,
.button[data-visual="primary"]:focus,
.button[visual="primary"]:hover,
.button[visual="primary"]:focus { background-image: linear-gradient(hsla(0,0%,0%, 0.15), hsla(0,0%,0%, 0.25)); }

.button[data-visual="secondary"],
.button[visual="secondary"] {
  background-color: transparent;
  color: var(--button-text-color);
  border-width: var(--button-border-width, 1px);
  border-style: var(--button-border-style, solid);
  border-color: hsla(var(--button-hsl), 1);
}

.button[data-visual="secondary"]:hover,
.button[data-visual="secondary"]:focus,
.button[visual="secondary"]:hover,
.button[visual="secondary"]:focus { background-image: linear-gradient(hsla(var(--button-hsl), 0.1), hsla(var(--button-hsl), 0.1)); }

.button[data-visual="unstyled"],
.button[visual="unstyled"] { 
  color: hsla(var(--button-hsl), 1); 
  border-width: var(--button-border-width, 0);
  border-style: var(--button-border-style, solid);
  border-color: transparent;
}

@media (max-width: 36em) {
  .button[data-mobile="wide"],
  .button[mobile="wide"] { width: 100%; }
}

.button[data-icon-before],
.button[data-icon-after], 
.button[icon-before],
.button[icon-after] {
  display: inline-flex;
  align-items: center;
  
}

.button[data-icon-before]:before,
.button[data-icon-after]:after,  
.button[icon-before]:before { content: attr(icon-before); }
.button[icon-after]:after  { content: attr(icon-after); }

.button[data-icon-before]:before,
.button[data-icon-after]:after,
.button[icon-before]:before,
.button[icon-after]:after {
  font-family: 'Material Symbols Outlined';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;  /* Preferred icon size */
  font-size: calc(var(--button-font-size) * 1.5);
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  color: var(--button-icon-color); 

  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;

  /* Support for IE. */
  font-feature-settings: 'liga';
}

.button[data-icon-before]:before,
.button[icon-before]:before { margin-right: var(--s-1); }

.button[data-icon-after]:after,
.button[icon-after]:after   { margin-left: var(--s-1); }

.button[data-icon-before]:empty:before,
.button[icon-before]:empty:before { margin-right: 0; }

.button[data-icon-after]:empty:after,
.button[icon-after]:empty:after   { margin-left: 0; }

.button[data-icon-before]:empty,
.button[icon-before]:empty,
.button[data-icon-after]:empty,
.button[icon-after]:empty { padding: var(--button-padding-v) var(--button-padding-v); }

.button[data-visual="primary"][data-icon-before]:before,
.button[visual="primary"][icon-before]:before,
.button[data-visual="primary"][data-icon-after]:after,
.button[visual="primary"][icon-after]:after { 
  --button-icon-color: var(--white-color);   
}

